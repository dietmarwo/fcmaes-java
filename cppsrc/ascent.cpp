#include "ascent/Ascent.h"
#include "fcmaes_core_Jni.h"

using namespace asc;

struct PVThrust {

    double _veff;
    double _mu;
    double _ux;
    double _uy;
    double _uz;
    double _unorm;

    void operator()(const state_t &pv, state_t &yDot, const double) {

        double x = pv[0];  // position
        double y = pv[1];
        double z = pv[2];
        double m = pv[6];
        double r = sqrt(x * x + y * y + z * z);
        double rrr = r * r * r;
        yDot[0] = pv[3]; // velocity
        yDot[1] = pv[4];
        yDot[2] = pv[5];
        yDot[3] = -_mu * x / (rrr);
        yDot[4] = -_mu * y / (rrr);
        yDot[5] = -_mu * z / (rrr);
        if (m > 0) {
            yDot[3] += _ux / m;
            yDot[4] += _uy / m;
            yDot[5] += _uz / m;
        }
        yDot[6] = -_unorm / _veff;
    }
};

/*
 * Class:     fcmaes_core_Jni
 * Method:    integratePVthrust
 * Signature: ([DDDDDDD)I
 */
JNIEXPORT jint JNICALL Java_fcmaes_core_Jni_integratePVthrust(JNIEnv *env,
        jclass cls, jdoubleArray tpvj, jdouble veff, jdouble ux, jdouble uy,
        jdouble uz, jdouble dt, jdouble step) {

    double *tpv = env->GetDoubleArrayElements(tpvj, JNI_FALSE);
    state_t y(7);
    for (int i = 0; i < 6; i++) // r, v
        y[i] = tpv[i];
    y[6] = tpv[8]; // mass

    RK4 integrator;
//    DOPRI45 integrator;
    PVThrust pvt;
    pvt._veff = veff;
    pvt._mu = tpv[6]; // mu
    pvt._ux = ux;
    pvt._uy = uy;
    pvt._uz = uz;
    pvt._unorm = sqrt(ux * ux + uy * uy + uz * uz);

//    Recorder recorder;

    int steps = 0;
    double t = 0.0;
    while (t < dt) {
//      recorder({ t, y[0], y[1], y[2], y[3], y[4], y[5], y[6] });
        steps++;
        if (t + step >= dt) {
            integrator(pvt, y, t, dt - t);
            break;
        } else
            integrator(pvt, y, t, step);
//      recorder.csv("PVThrust", { "t", "x", "y", "z", "vx", "vy", "vz", "m" });
    }

    for (int i = 0; i < 6; i++)
        tpv[i] = y[i];
    tpv[7] += dt;
    tpv[8] = y[6]; // mass

    env->SetDoubleArrayRegion(tpvj, 0, 9, (jdouble*) tpv);
    env->ReleaseDoubleArrayElements(tpvj, tpv, 0);
    return steps;
}
;

struct PVGtocX {

    static constexpr double k8 = -1.94316e-12; // (km/s)^-1 /kpc 8
    static constexpr double k7 = 3.7516e-10; // (km/s)^-1 /kpc 7
    static constexpr double k6 = -2.70559e-08; // (km/s)^-1 /kpc 6
    static constexpr double k5 = 9.70521e-07; //  (km/s)^-1 /kpc 5
    static constexpr double k4 = -1.88428e-05; //  (km/s)^-1 /kpc 4
    static constexpr double k3 = 0.000198502; //  (km/s)^-1 /kpc 3
    static constexpr double k2 = -0.0010625; //  (km/s)^-1 /kpc 2
    static constexpr double k1 = 0.0023821; //  (km/s)^-1 /kpc
    static constexpr double k0 = 0.00287729; //  (km/s)^-1
    static constexpr double kpc = 30856775814671900L; //  km
    static constexpr double Myr = 1000000.0; // yr
    static constexpr double yr = 31557600.0; //  s
    static constexpr double Myear = yr * Myr; //  s
    static constexpr double toKpcPerMyr = Myear / kpc;

    static constexpr double ki[] = { k0, k1, k2, k3, k4, k5, k6, k7, k8 };

    double cvcr(double r) { // in km/s
        double vcr = ki[8];
        for (int i = 7; i >= 0; i--)
            vcr = vcr * r + ki[i];
        return 1.0 / vcr;
    }

    void operator()(const state_t &pv, state_t &yDot, const double) {

        double x = pv[0];  // position
        double y = pv[1];
        double z = pv[2];
        double r = sqrt(x * x + y * y + z * z);
        double vcr = cvcr(r);
        double vkpc = vcr * toKpcPerMyr; // kpc / myr
        double fr = vkpc * vkpc / r;
        yDot[0] = pv[3]; // velocity
        yDot[1] = pv[4];
        yDot[2] = pv[5];
        yDot[3] = -x / r * fr;
        yDot[4] = -y / r * fr;
        yDot[5] = -z / r * fr;
    }
};

/*
 * Class:     fcmaes_core_Jni
 * Method:    integratePVgtocX
 * Signature: ([DDDDDDD)I
 */
JNIEXPORT jint JNICALL Java_fcmaes_core_Jni_integratePVgtocX(JNIEnv *env,
        jclass cls, jdoubleArray tpvj, jdouble dt, jdouble step) {

    double *tpv = env->GetDoubleArrayElements(tpvj, JNI_FALSE);
    state_t y(6);
    for (int i = 0; i < 6; i++) // r, v
        y[i] = tpv[i];

    RK4 integrator;
//    DOPRI45 integrator;
    PVGtocX pvt;

    int steps = 0;
    double t = 0.0;
    while (t < dt) {
        steps++;
        if (t + step >= dt) {
            integrator(pvt, y, t, dt - t);
            break;
        } else
            integrator(pvt, y, t, step);
    }
    for (int i = 0; i < 6; i++)
        tpv[i] = y[i];
    tpv[7] += dt;
    env->SetDoubleArrayRegion(tpvj, 0, 6, (jdouble*) tpv);
    env->ReleaseDoubleArrayElements(tpvj, tpv, 0);
    return steps;
}
;

struct F8 {

    static constexpr double ksi = 0.05236;
    static constexpr double ksi_2 = ksi * ksi;
    static constexpr double ksi_3 = ksi * ksi_2;
    double w;

    void operator()(const state_t &y, state_t &yDot, const double) {

        double y0 = y[0];
        double y0_2 = y0 * y0;
        double y0_3 = y0_2 * y0;

        double y1 = y[1];
        double y1_2 = y1 * y1;

        double y2 = y[2];

        yDot[0] = -0.877 * y0 + y2 - 0.088 * y0 * y2 + 0.47 * y0_2
                - 0.019 * y1_2 - y0_2 * y2 + 3.846 * y0_3 + 0.215 * ksi
                - 0.28 * y0_2 * ksi + 0.47 * y0 * ksi_2 - 0.63 * ksi_3
                - (0.215 * ksi - 0.28 * y0_2 * ksi - 0.63 * ksi_3) * 2 * w;
        yDot[1] = y2;
        yDot[2] = -4.208 * y0 - 0.396 * y2 - 0.47 * y0_2 - 3.564 * y0_3
                + 20.967 * ksi - 6.265 * y0_2 * ksi + 46 * y0 * ksi_2
                - 61.4 * ksi_3
                - (20.967 * ksi - 6.265 * y0_2 * ksi - 61.4 * ksi_3) * 2 * w;
    }
};

/*
 * Class:     fcmaes_core_Jni
 * Method:    integratePVgtocX
 * Signature: ([DDDDDDD)I
 */
JNIEXPORT jint JNICALL Java_fcmaes_core_Jni_integrateF8(JNIEnv *env, jclass cls,
        jdoubleArray yj, jdouble w, jdouble dt, jdouble step) {

    double *yd = env->GetDoubleArrayElements(yj, JNI_FALSE);
    state_t y(3);
    for (int i = 0; i < 3; i++)
        y[i] = yd[i];

//    RK4 integrator;
    DOPRI45 integrator;
    F8 f8;
    f8.w = w;
    int steps = 0;
    double t = 0.0;
    while (t < dt) {
        steps++;
        if (t + step >= dt) {
            integrator(f8, y, t, dt - t);
            break;
        } else
            integrator(f8, y, t, step);
    }
    for (int i = 0; i < 3; i++)
        yd[i] = y[i];
    env->SetDoubleArrayRegion(yj, 0, 3, (jdouble*) yd);
    env->ReleaseDoubleArrayElements(yj, yd, 0);
    return steps;
}
;

struct PVCtoc11R {

    double _mu;
    static constexpr double EARTH_RE = 6378.137;
    static constexpr double EARTH_J2 = 1.0826269e-3;

    void operator()(const state_t &pv, state_t &yDot, const double) {

        double x = pv[0];  // position
        double y = pv[1];
        double z = pv[2];
        double r = sqrt(x * x + y * y + z * z);
        double rrr = r * r * r;
        yDot[0] = pv[3]; // velocity
        yDot[1] = pv[4];
        yDot[2] = pv[5];
        double reqrq = EARTH_RE / r;
        reqrq *= reqrq * 1.5 * EARTH_J2;
        double zqrq = 5.0 * z * z / (r * r);
        yDot[3] = -_mu * x / (rrr) * (1.0 + reqrq * (1.0 - zqrq));
        yDot[4] = -_mu * y / (rrr) * (1.0 + reqrq * (1.0 - zqrq));
        yDot[5] = -_mu * z / (rrr) * (1.0 + reqrq * (3.0 - zqrq));
    }
};

/*
 * Class:     fcmaes_core_Jni
 * Method:    integratePVCtoc11R
 * Signature: ([DDDDDDD)I
 */
JNIEXPORT jint JNICALL Java_fcmaes_core_Jni_integratePVCtoc11R(JNIEnv *env,
        jclass cls, jdoubleArray tpvj, jdouble dt, jdouble step,
        jboolean dopri) {

    double *tpv = env->GetDoubleArrayElements(tpvj, JNI_FALSE);
    state_t y(6);
    for (int i = 0; i < 6; i++) // r, v
        y[i] = tpv[i];

    PVCtoc11R pvt;
    pvt._mu = tpv[6]; // mu

    int steps = 0;
    double t = 0.0;
    if (dopri) {
        DOPRI45 integrator;
        while (t < dt) {
            steps++;
            if (t + step >= dt) {
                integrator(pvt, y, t, dt - t);
                break;
            } else
                integrator(pvt, y, t, step);
        }
    } else {
        RK4 integrator;
        while (t < dt) {
            steps++;
            if (t + step >= dt) {
                integrator(pvt, y, t, dt - t);
                break;
            } else
                integrator(pvt, y, t, step);
        }
    }
    for (int i = 0; i < 6; i++)
        tpv[i] = y[i];
    tpv[7] += dt;
    env->SetDoubleArrayRegion(tpvj, 0, 6, (jdouble*) tpv);
    env->ReleaseDoubleArrayElements(tpvj, tpv, 0);
    return steps;
}
;

struct PVCtoc11 {

    double _mu;
    double _mass;

    static constexpr double EARTH_RE = 6378.137;
    static constexpr double EARTH_J2 = 1.0826269e-3;
    static constexpr double EARTH_ROT = 7.2921158553e-5;
    static constexpr double Cd = 2.2;
    static constexpr double s = 8e-6;

    const double _density[2001] = { 1.2250000e+09, 1.1672730e+09, 1.1116600e+09,
            1.0581040e+09, 1.0065540e+09, 9.5695450e+08, 9.0925440e+08,
            8.6340210e+08, 8.1934700e+08, 7.7703880e+08, 7.3642890e+08,
            6.9746890e+08, 6.6011160e+08, 6.2431010e+08, 5.9001870e+08,
            5.5719220e+08, 5.2578650e+08, 4.9575760e+08, 4.6706330e+08,
            4.3966140e+08, 4.1351070e+08, 3.8857070e+08, 3.6480180e+08,
            3.3743220e+08, 3.1194010e+08, 2.8837730e+08, 2.6659770e+08,
            2.4646610e+08, 2.2785740e+08, 2.1065640e+08, 1.9475620e+08,
            1.8005840e+08, 1.6647190e+08, 1.5391240e+08, 1.4230230e+08,
            1.3156950e+08, 1.2164780e+08, 1.1247560e+08, 1.0399630e+08,
            9.6157380e+07, 8.8910440e+07, 8.2051670e+07, 7.5715110e+07,
            6.9881570e+07, 6.4510030e+07, 5.9562930e+07, 5.5005810e+07,
            5.0807100e+07, 4.6937970e+07, 4.3371740e+07, 4.0083950e+07,
            3.7052460e+07, 3.4256660e+07, 3.1677730e+07, 2.9298390e+07,
            2.7102780e+07, 2.5076330e+07, 2.3205700e+07, 2.1478480e+07,
            1.9883430e+07, 1.8410210e+07, 1.7049200e+07, 1.5791650e+07,
            1.4629420e+07, 1.3555170e+07, 1.2529880e+07, 1.1573040e+07,
            1.0694500e+07, 9.8874020e+06, 9.1455670e+06, 8.4633750e+06,
            7.8357080e+06, 7.2579200e+06, 6.7257870e+06, 6.2354640e+06,
            5.7834540e+06, 5.3665600e+06, 4.9818710e+06, 4.6267410e+06,
            4.2987490e+06, 3.9956780e+06, 3.7155110e+06, 3.4564060e+06,
            3.2166720e+06, 2.9947640e+06, 2.7892690e+06, 2.5988940e+06,
            2.4224470e+06, 2.2588490e+06, 2.1070980e+06, 1.9662790e+06,
            1.8355530e+06, 1.7141470e+06, 1.6013550e+06, 1.4965190e+06,
            1.4011330e+06, 1.3166700e+06, 1.2373100e+06, 1.1627450e+06,
            1.0926840e+06, 1.0268550e+06, 9.6500050e+05, 9.0688090e+05,
            8.5304000e+05, 8.0561150e+05, 7.6060340e+05, 7.1790330e+05,
            6.7740360e+05, 6.3900020e+05, 6.0259600e+05, 5.6809560e+05,
            5.3540830e+05, 5.0444740e+05, 4.7513000e+05, 4.4737670e+05,
            4.2111180e+05, 3.9626210e+05, 3.7275860e+05, 3.5053480e+05,
            3.2952760e+05, 3.0967620e+05, 2.9092220e+05, 2.7321130e+05,
            2.5649030e+05, 2.4070860e+05, 2.2581860e+05, 2.1177410e+05,
            1.9853170e+05, 1.8604960e+05, 1.7428790e+05, 1.6320900e+05,
            1.5277670e+05, 1.4295670e+05, 1.3371630e+05, 1.2502430e+05,
            1.1685120e+05, 1.0916860e+05, 1.0194990e+05, 9.5169520e+04,
            8.8803310e+04, 8.2828120e+04, 7.7222220e+04, 7.1964770e+04,
            6.7036000e+04, 6.2373180e+04, 5.7950530e+04, 5.3823910e+04,
            4.9974620e+04, 4.6385260e+04, 4.3039270e+04, 3.9921080e+04,
            3.7016200e+04, 3.4310830e+04, 3.1792110e+04, 2.9447990e+04,
            2.7267000e+04, 2.5238510e+04, 2.3352490e+04, 2.1599530e+04,
            1.9970800e+04, 1.8458030e+04, 1.7053440e+04, 1.5749770e+04,
            1.4540190e+04, 1.3418310e+04, 1.2378170e+04, 1.1414140e+04,
            1.0521020e+04, 9.6938700e+03, 8.9281250e+03, 8.2195050e+03,
            7.5639830e+03, 6.9578270e+03, 6.3641620e+03, 5.8219860e+03,
            5.3259540e+03, 4.8721040e+03, 4.4568160e+03, 4.0767880e+03,
            3.7290080e+03, 3.4107240e+03, 3.1194240e+03, 2.8528120e+03,
            2.6084860e+03, 2.3843340e+03, 2.1787550e+03, 1.9903330e+03,
            1.8177320e+03, 1.6596680e+03, 1.5149870e+03, 1.3826210e+03,
            1.2615640e+03, 1.1508960e+03, 1.0497590e+03, 9.5737000e+02,
            8.8428010e+02, 8.0721110e+02, 7.3684190e+02, 6.7260380e+02,
            6.1397600e+02, 5.6048400e+02, 5.1300320e+02, 4.6955310e+02,
            4.2988740e+02, 3.9350520e+02, 3.6044660e+02, 3.3003180e+02,
            3.0231950e+02, 2.7687430e+02, 2.5380090e+02, 2.3253690e+02,
            2.1315430e+02, 1.9533670e+02, 1.7909940e+02, 1.6426530e+02,
            1.5060680e+02, 1.3816160e+02, 1.2666810e+02, 1.1608740e+02,
            1.0626120e+02, 9.7091100e+01, 8.8646790e+01, 8.1127550e+01,
            7.4409710e+01, 6.8426690e+01, 6.2977610e+01, 5.8128880e+01,
            5.3731190e+01, 4.9738320e+01, 4.6157960e+01, 4.2889680e+01,
            3.9937540e+01, 3.7208760e+01, 3.4727060e+01, 3.2459230e+01,
            3.0402660e+01, 2.8459240e+01, 2.6696960e+01, 2.5101790e+01,
            2.3606350e+01, 2.2223270e+01, 2.0948320e+01, 1.9769760e+01,
            1.8678550e+01, 1.7666650e+01, 1.6726910e+01, 1.5852950e+01,
            1.5039050e+01, 1.4280080e+01, 1.3571440e+01, 1.2908980e+01,
            1.2288960e+01, 1.1708020e+01, 1.1163090e+01, 1.0651390e+01,
            1.0170420e+01, 9.7178820e+00, 9.2916900e+00, 8.8899420e+00,
            8.5108990e+00, 8.1529680e+00, 7.8146950e+00, 7.4947370e+00,
            7.1918680e+00, 6.9049540e+00, 6.6329570e+00, 6.3749140e+00,
            6.1299410e+00, 5.8972120e+00, 5.6759770e+00, 5.4655300e+00,
            5.2652180e+00, 5.0744410e+00, 4.8926330e+00, 4.7192750e+00,
            4.5538810e+00, 4.3959970e+00, 4.2452030e+00, 4.1011050e+00,
            3.9633350e+00, 3.8315480e+00, 3.7054260e+00, 3.5846650e+00,
            3.4689850e+00, 3.3581210e+00, 3.2518260e+00, 3.1498670e+00,
            3.0520250e+00, 2.9580970e+00, 2.8678870e+00, 2.7812150e+00,
            2.6979100e+00, 2.6178090e+00, 2.5407610e+00, 2.4666220e+00,
            2.3952570e+00, 2.3265380e+00, 2.2603440e+00, 2.1965610e+00,
            2.1350790e+00, 2.0757990e+00, 2.0186210e+00, 1.9634540e+00,
            1.9102110e+00, 1.8588100e+00, 1.8091720e+00, 1.7612220e+00,
            1.7148910e+00, 1.6701100e+00, 1.6268170e+00, 1.5849490e+00,
            1.5444510e+00, 1.5052660e+00, 1.4673420e+00, 1.4306300e+00,
            1.3950820e+00, 1.3606520e+00, 1.3272970e+00, 1.2949770e+00,
            1.2636520e+00, 1.2332850e+00, 1.2038380e+00, 1.1752790e+00,
            1.1475740e+00, 1.1206930e+00, 1.0946050e+00, 1.0692810e+00,
            1.0446950e+00, 1.0208190e+00, 9.9762920e-01, 9.7510080e-01,
            9.5321130e-01, 9.3193800e-01, 9.1126000e-01, 8.9115680e-01,
            8.7160940e-01, 8.5259820e-01, 8.3410600e-01, 8.1611500e-01,
            7.9860870e-01, 7.8157170e-01, 7.6498810e-01, 7.4884350e-01,
            7.3312360e-01, 7.1781460e-01, 7.0290380e-01, 6.8837850e-01,
            6.7422650e-01, 6.6043610e-01, 6.4699610e-01, 6.3389570e-01,
            6.2112440e-01, 6.0867240e-01, 5.9652970e-01, 5.8468720e-01,
            5.7313590e-01, 5.6186680e-01, 5.5087160e-01, 5.4014250e-01,
            5.2967190e-01, 5.1945160e-01, 5.0947460e-01, 4.9973410e-01,
            4.9022310e-01, 4.8093520e-01, 4.7186400e-01, 4.6300340e-01,
            4.5434740e-01, 4.4589040e-01, 4.3762680e-01, 4.2955140e-01,
            4.2165880e-01, 4.1394400e-01, 4.0640260e-01, 3.9902940e-01,
            3.9182010e-01, 3.8477030e-01, 3.7787570e-01, 3.7113220e-01,
            3.6453580e-01, 3.5808270e-01, 3.5176900e-01, 3.4559130e-01,
            3.3954590e-01, 3.3362950e-01, 3.2783870e-01, 3.2217030e-01,
            3.1662130e-01, 3.1118860e-01, 3.0586930e-01, 3.0066040e-01,
            2.9555950e-01, 2.9056360e-01, 2.8567030e-01, 2.8087680e-01,
            2.7618110e-01, 2.7158040e-01, 2.6707260e-01, 2.6265550e-01,
            2.5832670e-01, 2.5408430e-01, 2.4992620e-01, 2.4585030e-01,
            2.4185470e-01, 2.3793750e-01, 2.3409690e-01, 2.3033120e-01,
            2.2663850e-01, 2.2301710e-01, 2.1946550e-01, 2.1598200e-01,
            2.1256510e-01, 2.0921320e-01, 2.0592490e-01, 2.0269870e-01,
            1.9953330e-01, 1.9642720e-01, 1.9337930e-01, 1.9038790e-01,
            1.8745230e-01, 1.8457080e-01, 1.8174240e-01, 1.7896600e-01,
            1.7624030e-01, 1.7356440e-01, 1.7093700e-01, 1.6835720e-01,
            1.6582400e-01, 1.6333640e-01, 1.6089330e-01, 1.5849380e-01,
            1.5613700e-01, 1.5382210e-01, 1.5154810e-01, 1.4931410e-01,
            1.4711950e-01, 1.4496310e-01, 1.4284450e-01, 1.4076270e-01,
            1.3871700e-01, 1.3670660e-01, 1.3473090e-01, 1.3278900e-01,
            1.3088050e-01, 1.2900450e-01, 1.2716040e-01, 1.2534760e-01,
            1.2356540e-01, 1.2181330e-01, 1.2009060e-01, 1.1839680e-01,
            1.1673120e-01, 1.1509340e-01, 1.1348280e-01, 1.1189880e-01,
            1.1034100e-01, 1.0880870e-01, 1.0730170e-01, 1.0581920e-01,
            1.0436100e-01, 1.0292640e-01, 1.0151510e-01, 1.0012660e-01,
            9.8760560e-02, 9.7416420e-02, 9.6093840e-02, 9.4792380e-02,
            9.3511690e-02, 9.2251320e-02, 9.1010930e-02, 8.9790190e-02,
            8.8588650e-02, 8.7406010e-02, 8.6241920e-02, 8.5095990e-02,
            8.3967960e-02, 8.2857480e-02, 8.1764200e-02, 8.0687820e-02,
            7.9628070e-02, 7.8584590e-02, 7.7557130e-02, 7.6545420e-02,
            7.5549120e-02, 7.4568000e-02, 7.3601780e-02, 7.2650190e-02,
            7.1712980e-02, 7.0789880e-02, 6.9880670e-02, 6.8985070e-02,
            6.8102880e-02, 6.7233830e-02, 6.6377730e-02, 6.5534310e-02,
            6.4703390e-02, 6.3884740e-02, 6.3078170e-02, 6.2283430e-02,
            6.1500330e-02, 6.0728700e-02, 5.9968330e-02, 5.9219020e-02,
            5.8480570e-02, 5.7752860e-02, 5.7035630e-02, 5.6328740e-02,
            5.5632040e-02, 5.4945300e-02, 5.4268430e-02, 5.3601200e-02,
            5.2943490e-02, 5.2295110e-02, 5.1655910e-02, 5.1025790e-02,
            5.0404540e-02, 4.9792060e-02, 4.9188180e-02, 4.8592760e-02,
            4.8005690e-02, 4.7426800e-02, 4.6855970e-02, 4.6293070e-02,
            4.5737990e-02, 4.5190570e-02, 4.4650720e-02, 4.4118300e-02,
            4.3593200e-02, 4.3075280e-02, 4.2564480e-02, 4.2060640e-02,
            4.1563660e-02, 4.1073450e-02, 4.0589880e-02, 4.0112870e-02,
            3.9642290e-02, 3.9178050e-02, 3.8720070e-02, 3.8268240e-02,
            3.7822440e-02, 3.7382630e-02, 3.6948680e-02, 3.6520500e-02,
            3.6098010e-02, 3.5681110e-02, 3.5269750e-02, 3.4863810e-02,
            3.4463220e-02, 3.4067890e-02, 3.3677770e-02, 3.3292740e-02,
            3.2912760e-02, 3.2537730e-02, 3.2167590e-02, 3.1802260e-02,
            3.1441650e-02, 3.1085730e-02, 3.0734400e-02, 3.0387610e-02,
            3.0045260e-02, 2.9707330e-02, 2.9373730e-02, 2.9044400e-02,
            2.8719270e-02, 2.8398280e-02, 2.8081380e-02, 2.7768500e-02,
            2.7459600e-02, 2.7154590e-02, 2.6853440e-02, 2.6556090e-02,
            2.6262480e-02, 2.5972550e-02, 2.5686270e-02, 2.5403550e-02,
            2.5124380e-02, 2.4848680e-02, 2.4576410e-02, 2.4307530e-02,
            2.4041980e-02, 2.3779710e-02, 2.3520690e-02, 2.3264860e-02,
            2.3012180e-02, 2.2762610e-02, 2.2516090e-02, 2.2272600e-02,
            2.2032080e-02, 2.1794500e-02, 2.1559810e-02, 2.1327980e-02,
            2.1098960e-02, 2.0872720e-02, 2.0649210e-02, 2.0428410e-02,
            2.0210260e-02, 1.9994750e-02, 1.9781810e-02, 1.9571440e-02,
            1.9363590e-02, 1.9158210e-02, 1.8955300e-02, 1.8754800e-02,
            1.8556680e-02, 1.8360920e-02, 1.8167480e-02, 1.7976330e-02,
            1.7787440e-02, 1.7600780e-02, 1.7416320e-02, 1.7234020e-02,
            1.7053860e-02, 1.6875830e-02, 1.6699870e-02, 1.6525970e-02,
            1.6354090e-02, 1.6184230e-02, 1.6016340e-02, 1.5850400e-02,
            1.5686370e-02, 1.5524250e-02, 1.5364010e-02, 1.5205620e-02,
            1.5049040e-02, 1.4894270e-02, 1.4741280e-02, 1.4590040e-02,
            1.4440540e-02, 1.4292750e-02, 1.4146640e-02, 1.4002190e-02,
            1.3859400e-02, 1.3718230e-02, 1.3578650e-02, 1.3440670e-02,
            1.3304240e-02, 1.3169350e-02, 1.3035990e-02, 1.2904130e-02,
            1.2773750e-02, 1.2644840e-02, 1.2517370e-02, 1.2391330e-02,
            1.2266710e-02, 1.2143470e-02, 1.2021610e-02, 1.1901100e-02,
            1.1781940e-02, 1.1664100e-02, 1.1547560e-02, 1.1432320e-02,
            1.1318350e-02, 1.1205640e-02, 1.1094180e-02, 1.0983940e-02,
            1.0874920e-02, 1.0767090e-02, 1.0660440e-02, 1.0554970e-02,
            1.0450640e-02, 1.0347460e-02, 1.0245400e-02, 1.0144460e-02,
            1.0044610e-02, 9.9458490e-03, 9.8481570e-03, 9.7515260e-03,
            9.6559410e-03, 9.5613920e-03, 9.4678590e-03, 9.3753360e-03,
            9.2838100e-03, 9.1932700e-03, 9.1037020e-03, 9.0150900e-03,
            8.9274300e-03, 8.8407090e-03, 8.7549130e-03, 8.6700330e-03,
            8.5860580e-03, 8.5029770e-03, 8.4207780e-03, 8.3394520e-03,
            8.2589910e-03, 8.1793800e-03, 8.1006100e-03, 8.0226770e-03,
            7.9455630e-03, 7.8692630e-03, 7.7937680e-03, 7.7190650e-03,
            7.6451410e-03, 7.5719990e-03, 7.4996250e-03, 7.4280040e-03,
            7.3571330e-03, 7.2870030e-03, 7.2176030e-03, 7.1489270e-03,
            7.0809630e-03, 7.0137070e-03, 6.9471500e-03, 6.8812810e-03,
            6.8160940e-03, 6.7515840e-03, 6.6877390e-03, 6.6245520e-03,
            6.5620170e-03, 6.5001240e-03, 6.4388720e-03, 6.3782450e-03,
            6.3182430e-03, 6.2588540e-03, 6.2000730e-03, 6.1418950e-03,
            6.0843100e-03, 6.0273120e-03, 5.9708960e-03, 5.9150560e-03,
            5.8597830e-03, 5.8050730e-03, 5.7509150e-03, 5.6973070e-03,
            5.6442450e-03, 5.5917160e-03, 5.5397210e-03, 5.4882480e-03,
            5.4372970e-03, 5.3868580e-03, 5.3369250e-03, 5.2874970e-03,
            5.2385640e-03, 5.1901230e-03, 5.1421680e-03, 5.0946910e-03,
            5.0476880e-03, 5.0011570e-03, 4.9550910e-03, 4.9094820e-03,
            4.8643300e-03, 4.8196250e-03, 4.7753660e-03, 4.7315470e-03,
            4.6881620e-03, 4.6452070e-03, 4.6026780e-03, 4.5605680e-03,
            4.5188760e-03, 4.4775960e-03, 4.4367230e-03, 4.3962520e-03,
            4.3561790e-03, 4.3165020e-03, 4.2772140e-03, 4.2383120e-03,
            4.1997910e-03, 4.1616480e-03, 4.1238780e-03, 4.0864790e-03,
            4.0494430e-03, 4.0127700e-03, 3.9764550e-03, 3.9404940e-03,
            3.9048820e-03, 3.8696170e-03, 3.8346960e-03, 3.8001120e-03,
            3.7658650e-03, 3.7319490e-03, 3.6983620e-03, 3.6651000e-03,
            3.6321580e-03, 3.5995370e-03, 3.5672280e-03, 3.5352330e-03,
            3.5035430e-03, 3.4721620e-03, 3.4410810e-03, 3.4102970e-03,
            3.3798110e-03, 3.3496160e-03, 3.3197100e-03, 3.2900930e-03,
            3.2607560e-03, 3.2317020e-03, 3.2029250e-03, 3.1744210e-03,
            3.1461910e-03, 3.1182270e-03, 3.0905330e-03, 3.0631000e-03,
            3.0359290e-03, 3.0090140e-03, 2.9823550e-03, 2.9559510e-03,
            2.9297950e-03, 2.9038870e-03, 2.8782250e-03, 2.8528040e-03,
            2.8276230e-03, 2.8026810e-03, 2.7779740e-03, 2.7534990e-03,
            2.7292540e-03, 2.7052390e-03, 2.6814490e-03, 2.6578810e-03,
            2.6345350e-03, 2.6114090e-03, 2.5884980e-03, 2.5658020e-03,
            2.5433190e-03, 2.5210460e-03, 2.4989800e-03, 2.4771220e-03,
            2.4554660e-03, 2.4340120e-03, 2.4127590e-03, 2.3917040e-03,
            2.3708440e-03, 2.3501780e-03, 2.3297040e-03, 2.3094190e-03,
            2.2893230e-03, 2.2694140e-03, 2.2496880e-03, 2.2301460e-03,
            2.2107840e-03, 2.1916010e-03, 2.1725950e-03, 2.1537650e-03,
            2.1351070e-03, 2.1166230e-03, 2.0983080e-03, 2.0801620e-03,
            2.0621820e-03, 2.0443680e-03, 2.0267160e-03, 2.0092290e-03,
            1.9919010e-03, 1.9747310e-03, 1.9577190e-03, 1.9408620e-03,
            1.9241600e-03, 1.9076110e-03, 1.8912120e-03, 1.8749640e-03,
            1.8588630e-03, 1.8429090e-03, 1.8271010e-03, 1.8114360e-03,
            1.7959140e-03, 1.7805340e-03, 1.7652930e-03, 1.7501890e-03,
            1.7352250e-03, 1.7203940e-03, 1.7056990e-03, 1.6911360e-03,
            1.6767060e-03, 1.6624060e-03, 1.6482360e-03, 1.6341930e-03,
            1.6202780e-03, 1.6064870e-03, 1.5928210e-03, 1.5792790e-03,
            1.5658580e-03, 1.5525580e-03, 1.5393780e-03, 1.5263160e-03,
            1.5133720e-03, 1.5005440e-03, 1.4878310e-03, 1.4752320e-03,
            1.4627460e-03, 1.4503720e-03, 1.4381090e-03, 1.4259550e-03,
            1.4139110e-03, 1.4019730e-03, 1.3901430e-03, 1.3784180e-03,
            1.3667970e-03, 1.3552810e-03, 1.3438670e-03, 1.3325550e-03,
            1.3213430e-03, 1.3102320e-03, 1.2992190e-03, 1.2883030e-03,
            1.2774850e-03, 1.2667640e-03, 1.2561360e-03, 1.2456040e-03,
            1.2351650e-03, 1.2248180e-03, 1.2145630e-03, 1.2043970e-03,
            1.1943230e-03, 1.1843380e-03, 1.1744400e-03, 1.1646300e-03,
            1.1549070e-03, 1.1452700e-03, 1.1357170e-03, 1.1262490e-03,
            1.1168630e-03, 1.1075610e-03, 1.0983410e-03, 1.0892010e-03,
            1.0801420e-03, 1.0711620e-03, 1.0622620e-03, 1.0534390e-03,
            1.0446940e-03, 1.0360250e-03, 1.0274330e-03, 1.0189150e-03,
            1.0104720e-03, 1.0021030e-03, 9.9380760e-04, 9.8558370e-04,
            9.7743210e-04, 9.6935220e-04, 9.6134200e-04, 9.5340260e-04,
            9.4553150e-04, 9.3772930e-04, 9.2999500e-04, 9.2232830e-04,
            9.1472850e-04, 9.0719410e-04, 8.9972580e-04, 8.9232190e-04,
            8.8498270e-04, 8.7770690e-04, 8.7049430e-04, 8.6334460e-04,
            8.5625690e-04, 8.4922980e-04, 8.4226410e-04, 8.3535870e-04,
            8.2851300e-04, 8.2172620e-04, 8.1499870e-04, 8.0832900e-04,
            8.0171680e-04, 7.9516170e-04, 7.8866320e-04, 7.8222040e-04,
            7.7583390e-04, 7.6950200e-04, 7.6322470e-04, 7.5700140e-04,
            7.5083150e-04, 7.4471460e-04, 7.3865070e-04, 7.3263850e-04,
            7.2667820e-04, 7.2076890e-04, 7.1491040e-04, 7.0910200e-04,
            7.0334390e-04, 6.9763460e-04, 6.9197450e-04, 6.8636290e-04,
            6.8079910e-04, 6.7528310e-04, 6.6981400e-04, 6.6439220e-04,
            6.5901580e-04, 6.5368610e-04, 6.4840160e-04, 6.4316250e-04,
            6.3796780e-04, 6.3281720e-04, 6.2771120e-04, 6.2264780e-04,
            6.1762800e-04, 6.1265100e-04, 6.0771610e-04, 6.0282350e-04,
            5.9797210e-04, 5.9316240e-04, 5.8839290e-04, 5.8366450e-04,
            5.7897600e-04, 5.7432730e-04, 5.6971790e-04, 5.6514770e-04,
            5.6061640e-04, 5.5612310e-04, 5.5166820e-04, 5.4725080e-04,
            5.4287090e-04, 5.3852780e-04, 5.3422140e-04, 5.2995150e-04,
            5.2571780e-04, 5.2151960e-04, 5.1735720e-04, 5.1322970e-04,
            5.0913700e-04, 5.0507860e-04, 5.0105480e-04, 4.9706470e-04,
            4.9310800e-04, 4.8918480e-04, 4.8529470e-04, 4.8143730e-04,
            4.7761230e-04, 4.7381910e-04, 4.7005820e-04, 4.6632870e-04,
            4.6263050e-04, 4.5896340e-04, 4.5532680e-04, 4.5172080e-04,
            4.4814520e-04, 4.4459960e-04, 4.4108350e-04, 4.3759680e-04,
            4.3413950e-04, 4.3071090e-04, 4.2731120e-04, 4.2393970e-04,
            4.2059650e-04, 4.1728110e-04, 4.1399340e-04, 4.1073330e-04,
            4.0750020e-04, 4.0429420e-04, 4.0111500e-04, 3.9796200e-04,
            3.9483540e-04, 3.9173480e-04, 3.8866030e-04, 3.8561110e-04,
            3.8258730e-04, 3.7958890e-04, 3.7661520e-04, 3.7366610e-04,
            3.7074160e-04, 3.6784140e-04, 3.6496520e-04, 3.6211300e-04,
            3.5928440e-04, 3.5647920e-04, 3.5369740e-04, 3.5093840e-04,
            3.4820250e-04, 3.4548910e-04, 3.4279820e-04, 3.4012960e-04,
            3.3748300e-04, 3.3485820e-04, 3.3225530e-04, 3.2967380e-04,
            3.2711370e-04, 3.2457460e-04, 3.2205650e-04, 3.1955920e-04,
            3.1708250e-04, 3.1462610e-04, 3.1219020e-04, 3.0977420e-04,
            3.0737810e-04, 3.0500170e-04, 3.0264480e-04, 3.0030750e-04,
            2.9798930e-04, 2.9569010e-04, 2.9340990e-04, 2.9114830e-04,
            2.8890540e-04, 2.8668090e-04, 2.8447470e-04, 2.8228660e-04,
            2.8011630e-04, 2.7796390e-04, 2.7582910e-04, 2.7371180e-04,
            2.7161180e-04, 2.6952910e-04, 2.6746330e-04, 2.6541450e-04,
            2.6338230e-04, 2.6136690e-04, 2.5936780e-04, 2.5738520e-04,
            2.5541880e-04, 2.5346840e-04, 2.5153390e-04, 2.4961510e-04,
            2.4771220e-04, 2.4582460e-04, 2.4395250e-04, 2.4209550e-04,
            2.4025370e-04, 2.3842690e-04, 2.3661500e-04, 2.3481790e-04,
            2.3303520e-04, 2.3126720e-04, 2.2951350e-04, 2.2777410e-04,
            2.2604870e-04, 2.2433740e-04, 2.2264010e-04, 2.2095640e-04,
            2.1928630e-04, 2.1762990e-04, 2.1598700e-04, 2.1435720e-04,
            2.1274070e-04, 2.1113730e-04, 2.0954690e-04, 2.0796930e-04,
            2.0640450e-04, 2.0485230e-04, 2.0331270e-04, 2.0178560e-04,
            2.0027070e-04, 1.9876810e-04, 1.9727770e-04, 1.9579920e-04,
            1.9433270e-04, 1.9287810e-04, 1.9143520e-04, 1.9000390e-04,
            1.8858410e-04, 1.8717570e-04, 1.8577870e-04, 1.8439290e-04,
            1.8301830e-04, 1.8165480e-04, 1.8030210e-04, 1.7896030e-04,
            1.7762940e-04, 1.7630920e-04, 1.7499950e-04, 1.7370040e-04,
            1.7241170e-04, 1.7113330e-04, 1.6986520e-04, 1.6860730e-04,
            1.6735940e-04, 1.6612150e-04, 1.6489350e-04, 1.6367530e-04,
            1.6246700e-04, 1.6126820e-04, 1.6007900e-04, 1.5889940e-04,
            1.5772910e-04, 1.5656830e-04, 1.5541680e-04, 1.5427440e-04,
            1.5314100e-04, 1.5201680e-04, 1.5090150e-04, 1.4979510e-04,
            1.4869760e-04, 1.4760870e-04, 1.4652860e-04, 1.4545710e-04,
            1.4439400e-04, 1.4333950e-04, 1.4229330e-04, 1.4125540e-04,
            1.4022590e-04, 1.3920440e-04, 1.3819110e-04, 1.3718590e-04,
            1.3618850e-04, 1.3519910e-04, 1.3421760e-04, 1.3324390e-04,
            1.3227790e-04, 1.3131950e-04, 1.3036870e-04, 1.2942540e-04,
            1.2848960e-04, 1.2756120e-04, 1.2664020e-04, 1.2572640e-04,
            1.2481990e-04, 1.2392050e-04, 1.2302820e-04, 1.2214300e-04,
            1.2126480e-04, 1.2039340e-04, 1.1952900e-04, 1.1867130e-04,
            1.1782050e-04, 1.1697640e-04, 1.1613880e-04, 1.1530790e-04,
            1.1448360e-04, 1.1366570e-04, 1.1285420e-04, 1.1204910e-04,
            1.1125040e-04, 1.1045790e-04, 1.0967160e-04, 1.0889160e-04,
            1.0811760e-04, 1.0734980e-04, 1.0658790e-04, 1.0583200e-04,
            1.0508200e-04, 1.0433790e-04, 1.0359970e-04, 1.0286720e-04,
            1.0214050e-04, 1.0141940e-04, 1.0070400e-04, 9.9994160e-05,
            9.9289830e-05, 9.8591090e-05, 9.7897780e-05, 9.7209820e-05,
            9.6527310e-05, 9.5850100e-05, 9.5178160e-05, 9.4511420e-05,
            9.3849920e-05, 9.3193580e-05, 9.2542350e-05, 9.1896180e-05,
            9.1255040e-05, 9.0618860e-05, 8.9987650e-05, 8.9361340e-05,
            8.8739890e-05, 8.8123270e-05, 8.7511430e-05, 8.6904380e-05,
            8.6302010e-05, 8.5704300e-05, 8.5111230e-05, 8.4522740e-05,
            8.3938860e-05, 8.3359450e-05, 8.2784510e-05, 8.2214100e-05,
            8.1648030e-05, 8.1086340e-05, 8.0529010e-05, 7.9975980e-05,
            7.9427240e-05, 7.8882710e-05, 7.8342400e-05, 7.7806240e-05,
            7.7274230e-05, 7.6746280e-05, 7.6222460e-05, 7.5702610e-05,
            7.5186810e-05, 7.4674960e-05, 7.4167050e-05, 7.3663070e-05,
            7.3162920e-05, 7.2666630e-05, 7.2174170e-05, 7.1685450e-05,
            7.1200520e-05, 7.0719290e-05, 7.0241770e-05, 6.9767870e-05,
            6.9297640e-05, 6.8831000e-05, 6.8367910e-05, 6.7908380e-05,
            6.7452370e-05, 6.6999850e-05, 6.6550800e-05, 6.6105130e-05,
            6.5662910e-05, 6.5224050e-05, 6.4788550e-05, 6.4356360e-05,
            6.3927460e-05, 6.3501820e-05, 6.3079440e-05, 6.2660280e-05,
            6.2244320e-05, 6.1831500e-05, 6.1421840e-05, 6.1015280e-05,
            6.0611780e-05, 6.0211390e-05, 5.9814020e-05, 5.9419690e-05,
            5.9028340e-05, 5.8639960e-05, 5.8254510e-05, 5.7871980e-05,
            5.7492320e-05, 5.7115580e-05, 5.6741690e-05, 5.6370610e-05,
            5.6002340e-05, 5.5636850e-05, 5.5274120e-05, 5.4914120e-05,
            5.4556850e-05, 5.4202290e-05, 5.3850380e-05, 5.3501130e-05,
            5.3154510e-05, 5.2810480e-05, 5.2469060e-05, 5.2130210e-05,
            5.1793910e-05, 5.1460130e-05, 5.1128850e-05, 5.0800070e-05,
            5.0473760e-05, 5.0149900e-05, 4.9828440e-05, 4.9509430e-05,
            4.9192800e-05, 4.8878530e-05, 4.8566600e-05, 4.8257030e-05,
            4.7949780e-05, 4.7644780e-05, 4.7342110e-05, 4.7041660e-05,
            4.6743500e-05, 4.6447530e-05, 4.6153770e-05, 4.5862210e-05,
            4.5572800e-05, 4.5285580e-05, 4.5000470e-05, 4.4717500e-05,
            4.4436610e-05, 4.4157840e-05, 4.3881110e-05, 4.3606460e-05,
            4.3333830e-05, 4.3063220e-05, 4.2794640e-05, 4.2528030e-05,
            4.2263400e-05, 4.2000740e-05, 4.1740010e-05, 4.1481210e-05,
            4.1224310e-05, 4.0969350e-05, 4.0716220e-05, 4.0465000e-05,
            4.0215640e-05, 3.9968070e-05, 3.9722370e-05, 3.9478440e-05,
            3.9236350e-05, 3.8995990e-05, 3.8757460e-05, 3.8520630e-05,
            3.8285580e-05, 3.8052220e-05, 3.7820570e-05, 3.7590660e-05,
            3.7362400e-05, 3.7135850e-05, 3.6910930e-05, 3.6687650e-05,
            3.6466030e-05, 3.6246000e-05, 3.6027590e-05, 3.5810810e-05,
            3.5595580e-05, 3.5381910e-05, 3.5169810e-05, 3.4959270e-05,
            3.4750260e-05, 3.4542760e-05, 3.4336760e-05, 3.4132270e-05,
            3.3929270e-05, 3.3727740e-05, 3.3527700e-05, 3.3329080e-05,
            3.3131910e-05, 3.2936170e-05, 3.2741850e-05, 3.2548940e-05,
            3.2357420e-05, 3.2167280e-05, 3.1978520e-05, 3.1791100e-05,
            3.1605060e-05, 3.1420370e-05, 3.1237000e-05, 3.1054960e-05,
            3.0874220e-05, 3.0694760e-05, 3.0516630e-05, 3.0339770e-05,
            3.0164190e-05, 2.9989840e-05, 2.9816760e-05, 2.9644940e-05,
            2.9474310e-05, 2.9304940e-05, 2.9136760e-05, 2.8969800e-05,
            2.8804040e-05, 2.8639440e-05, 2.8476040e-05, 2.8313780e-05,
            2.8152680e-05, 2.7992760e-05, 2.7833950e-05, 2.7676300e-05,
            2.7519740e-05, 2.7364300e-05, 2.7209970e-05, 2.7056750e-05,
            2.6904600e-05, 2.6753530e-05, 2.6603530e-05, 2.6454600e-05,
            2.6306750e-05, 2.6159910e-05, 2.6014120e-05, 2.5869360e-05,
            2.5725620e-05, 2.5582900e-05, 2.5441180e-05, 2.5300470e-05,
            2.5160720e-05, 2.5021980e-05, 2.4884210e-05, 2.4747420e-05,
            2.4611590e-05, 2.4476690e-05, 2.4342760e-05, 2.4209770e-05,
            2.4077690e-05, 2.3946550e-05, 2.3816340e-05, 2.3687010e-05,
            2.3558610e-05, 2.3431090e-05, 2.3304480e-05, 2.3178730e-05,
            2.3053860e-05, 2.2929880e-05, 2.2806740e-05, 2.2684460e-05,
            2.2563050e-05, 2.2442460e-05, 2.2322720e-05, 2.2203790e-05,
            2.2085700e-05, 2.1968450e-05, 2.1851980e-05, 2.1736320e-05,
            2.1621470e-05, 2.1507400e-05, 2.1394110e-05, 2.1281620e-05,
            2.1169900e-05, 2.1058950e-05, 2.0948760e-05, 2.0839330e-05,
            2.0730650e-05, 2.0622720e-05, 2.0515510e-05, 2.0409060e-05,
            2.0303340e-05, 2.0198330e-05, 2.0094050e-05, 1.9990460e-05,
            1.9887580e-05, 1.9785430e-05, 1.9683960e-05, 1.9583180e-05,
            1.9483090e-05, 1.9383680e-05, 1.9284940e-05, 1.9186870e-05,
            1.9089470e-05, 1.8992730e-05, 1.8896640e-05, 1.8801210e-05,
            1.8706420e-05, 1.8612280e-05, 1.8518770e-05, 1.8425890e-05,
            1.8333640e-05, 1.8241990e-05, 1.8150980e-05, 1.8060580e-05,
            1.7970770e-05, 1.7881590e-05, 1.7792980e-05, 1.7704990e-05,
            1.7617570e-05, 1.7530740e-05, 1.7444500e-05, 1.7358830e-05,
            1.7273730e-05, 1.7189200e-05, 1.7105240e-05, 1.7021830e-05,
            1.6938970e-05, 1.6856670e-05, 1.6774910e-05, 1.6693700e-05,
            1.6613030e-05, 1.6532890e-05, 1.6453270e-05, 1.6374190e-05,
            1.6295630e-05, 1.6217600e-05, 1.6140060e-05, 1.6063050e-05,
            1.5986530e-05, 1.5910530e-05, 1.5835020e-05, 1.5760020e-05,
            1.5685490e-05, 1.5611460e-05, 1.5537910e-05, 1.5464850e-05,
            1.5392270e-05, 1.5320150e-05, 1.5248510e-05, 1.5177330e-05,
            1.5106620e-05, 1.5036370e-05, 1.4966570e-05, 1.4897230e-05,
            1.4828340e-05, 1.4759900e-05, 1.4691890e-05, 1.4624330e-05,
            1.4557200e-05, 1.4490510e-05, 1.4424250e-05, 1.4358420e-05,
            1.4293010e-05, 1.4228010e-05, 1.4163450e-05, 1.4099290e-05,
            1.4035550e-05, 1.3972210e-05, 1.3909270e-05, 1.3846750e-05,
            1.3784620e-05, 1.3722880e-05, 1.3661540e-05, 1.3600590e-05,
            1.3540030e-05, 1.3479860e-05, 1.3420060e-05, 1.3360650e-05,
            1.3301610e-05, 1.3242950e-05, 1.3184650e-05, 1.3126720e-05,
            1.3069170e-05, 1.3011970e-05, 1.2955140e-05, 1.2898660e-05,
            1.2842530e-05, 1.2786760e-05, 1.2731340e-05, 1.2676270e-05,
            1.2621550e-05, 1.2567150e-05, 1.2513110e-05, 1.2459400e-05,
            1.2406020e-05, 1.2352980e-05, 1.2300270e-05, 1.2247890e-05,
            1.2195830e-05, 1.2144090e-05, 1.2092670e-05, 1.2041580e-05,
            1.1990790e-05, 1.1940320e-05, 1.1890170e-05, 1.1840320e-05,
            1.1790770e-05, 1.1741530e-05, 1.1692600e-05, 1.1643970e-05,
            1.1595620e-05, 1.1547580e-05, 1.1499830e-05, 1.1452380e-05,
            1.1405210e-05, 1.1358330e-05, 1.1311740e-05, 1.1265430e-05,
            1.1219400e-05, 1.1173640e-05, 1.1128170e-05, 1.1082970e-05,
            1.1038040e-05, 1.0993380e-05, 1.0949000e-05, 1.0904890e-05,
            1.0861030e-05, 1.0817440e-05, 1.0774110e-05, 1.0731040e-05,
            1.0688230e-05, 1.0645680e-05, 1.0603380e-05, 1.0561330e-05,
            1.0519530e-05, 1.0477980e-05, 1.0436680e-05, 1.0395620e-05,
            1.0354810e-05, 1.0314240e-05, 1.0273900e-05, 1.0233810e-05,
            1.0193950e-05, 1.0154330e-05, 1.0114940e-05, 1.0075780e-05,
            1.0036850e-05, 9.9981530e-06, 9.9596780e-06, 9.9214300e-06,
            9.8834030e-06, 9.8456010e-06, 9.8080190e-06, 9.7706560e-06,
            9.7335050e-06, 9.6965750e-06, 9.6598600e-06, 9.6233510e-06,
            9.5870550e-06, 9.5509720e-06, 9.5150950e-06, 9.4794240e-06,
            9.4439650e-06, 9.4087040e-06, 9.3736440e-06, 9.3387890e-06,
            9.3041250e-06, 9.2696650e-06, 9.2354040e-06, 9.2013380e-06,
            9.1674600e-06, 9.1337810e-06, 9.1002880e-06, 9.0669850e-06,
            9.0338760e-06, 9.0009500e-06, 8.9682100e-06, 8.9356550e-06,
            8.9032840e-06, 8.8710950e-06, 8.8390870e-06, 8.8072580e-06,
            8.7756040e-06, 8.7441340e-06, 8.7128320e-06, 8.6817120e-06,
            8.6507580e-06, 8.6199790e-06, 8.5893770e-06, 8.5589370e-06,
            8.5286690e-06, 8.4985660e-06, 8.4686330e-06, 8.4388630e-06,
            8.4092520e-06, 8.3798110e-06, 8.3505320e-06, 8.3214080e-06,
            8.2924480e-06, 8.2636420e-06, 8.2349970e-06, 8.2065100e-06,
            8.1781730e-06, 8.1499930e-06, 8.1219660e-06, 8.0940900e-06,
            8.0663630e-06, 8.0387890e-06, 8.0113630e-06, 7.9840830e-06,
            7.9569540e-06, 7.9299660e-06, 7.9031270e-06, 7.8764290e-06,
            7.8498740e-06, 7.8234620e-06, 7.7971910e-06, 7.7710610e-06,
            7.7450670e-06, 7.7192130e-06, 7.6934940e-06, 7.6679130e-06,
            7.6424670e-06, 7.6171560e-06, 7.5919770e-06, 7.5669310e-06,
            7.5420190e-06, 7.5172350e-06, 7.4925810e-06, 7.4680570e-06,
            7.4436570e-06, 7.4193890e-06, 7.3952480e-06, 7.3712280e-06,
            7.3473370e-06, 7.3235660e-06, 7.2999220e-06, 7.2763980e-06,
            7.2529950e-06, 7.2297130e-06, 7.2065500e-06, 7.1835080e-06,
            7.1605840e-06, 7.1377730e-06, 7.1150840e-06, 7.0925090e-06,
            7.0700480e-06, 7.0477000e-06, 7.0254700e-06, 7.0033490e-06,
            6.9813410e-06, 6.9594430e-06, 6.9376570e-06, 6.9159820e-06,
            6.8944160e-06, 6.8729540e-06, 6.8516040e-06, 6.8303580e-06,
            6.8092210e-06, 6.7881870e-06, 6.7672590e-06, 6.7464340e-06,
            6.7257130e-06, 6.7050950e-06, 6.6845790e-06, 6.6641650e-06,
            6.6438490e-06, 6.6236380e-06, 6.6035240e-06, 6.5835080e-06,
            6.5635880e-06, 6.5437690e-06, 6.5240470e-06, 6.5044210e-06,
            6.4848860e-06, 6.4654490e-06, 6.4461070e-06, 6.4268610e-06,
            6.4077030e-06, 6.3886410e-06, 6.3696700e-06, 6.3507890e-06,
            6.3320020e-06, 6.3133020e-06, 6.2946920e-06, 6.2761690e-06,
            6.2577380e-06, 6.2393940e-06, 6.2211390e-06, 6.2029660e-06,
            6.1848840e-06, 6.1668840e-06, 6.1489690e-06, 6.1311390e-06,
            6.1133930e-06, 6.0957310e-06, 6.0781530e-06, 6.0606570e-06,
            6.0432400e-06, 6.0259070e-06, 6.0086520e-06, 5.9914810e-06,
            5.9743880e-06, 5.9573740e-06, 5.9404390e-06, 5.9235800e-06,
            5.9068020e-06, 5.8901010e-06, 5.8734740e-06, 5.8569260e-06,
            5.8404510e-06, 5.8240560e-06, 5.8077320e-06, 5.7914820e-06,
            5.7753070e-06, 5.7592050e-06, 5.7431770e-06, 5.7272220e-06,
            5.7113360e-06, 5.6955240e-06, 5.6797820e-06, 5.6641120e-06,
            5.6485130e-06, 5.6329820e-06, 5.6175210e-06, 5.6021280e-06,
            5.5868040e-06, 5.5715490e-06, 5.5563600e-06, 5.5412400e-06,
            5.5261860e-06, 5.5112000e-06, 5.4962770e-06, 5.4814220e-06,
            5.4666310e-06, 5.4519040e-06, 5.4372440e-06, 5.4226450e-06,
            5.4081120e-06, 5.3936400e-06, 5.3792340e-06, 5.3648880e-06,
            5.3506030e-06, 5.3363810e-06, 5.3222220e-06, 5.3081220e-06,
            5.2940840e-06, 5.2801050e-06, 5.2661860e-06, 5.2523250e-06,
            5.2385260e-06, 5.2247830e-06, 5.2111000e-06, 5.1974740e-06,
            5.1839080e-06, 5.1703970e-06, 5.1569420e-06, 5.1435460e-06,
            5.1302050e-06, 5.1169220e-06, 5.1036930e-06, 5.0905200e-06,
            5.0774010e-06, 5.0643360e-06, 5.0513270e-06, 5.0383720e-06,
            5.0254680e-06, 5.0126200e-06, 4.9998240e-06, 4.9870810e-06,
            4.9743890e-06, 4.9617500e-06, 4.9491640e-06, 4.9366290e-06,
            4.9241450e-06, 4.9117110e-06, 4.8993290e-06, 4.8869950e-06,
            4.8747110e-06, 4.8624790e-06, 4.8502950e-06, 4.8381620e-06,
            4.8260740e-06, 4.8140370e-06, 4.8020480e-06, 4.7901060e-06,
            4.7782130e-06, 4.7663670e-06, 4.7545670e-06, 4.7428150e-06,
            4.7311110e-06, 4.7194490e-06, 4.7078370e-06, 4.6962690e-06,
            4.6847470e-06, 4.6732690e-06, 4.6618390e-06, 4.6504510e-06,
            4.6391080e-06, 4.6278070e-06, 4.6165540e-06, 4.6053430e-06,
            4.5941740e-06, 4.5830510e-06, 4.5719690e-06, 4.5609290e-06,
            4.5499330e-06, 4.5389800e-06, 4.5280670e-06, 4.5171950e-06,
            4.5063660e-06, 4.4955800e-06, 4.4848320e-06, 4.4741270e-06,
            4.4634600e-06, 4.4528360e-06, 4.4422520e-06, 4.4317060e-06,
            4.4211990e-06, 4.4107350e-06, 4.4003070e-06, 4.3899190e-06,
            4.3795710e-06, 4.3692600e-06, 4.3589870e-06, 4.3487530e-06,
            4.3385570e-06, 4.3283980e-06, 4.3182780e-06, 4.3081940e-06,
            4.2981480e-06, 4.2881380e-06, 4.2781640e-06, 4.2682270e-06,
            4.2583280e-06, 4.2484630e-06, 4.2386360e-06, 4.2288420e-06,
            4.2190850e-06, 4.2093630e-06, 4.1996750e-06, 4.1900240e-06,
            4.1804080e-06, 4.1708240e-06, 4.1612770e-06, 4.1517620e-06,
            4.1422820e-06, 4.1328360e-06, 4.1234230e-06, 4.1140440e-06,
            4.1046980e-06, 4.0953840e-06, 4.0861030e-06, 4.0768560e-06,
            4.0676420e-06, 4.0584590e-06, 4.0493070e-06, 4.0401890e-06,
            4.0311040e-06, 4.0220490e-06, 4.0130250e-06, 4.0040330e-06,
            3.9950720e-06, 3.9861410e-06, 3.9772420e-06, 3.9683750e-06,
            3.9595370e-06, 3.9507290e-06, 3.9419510e-06, 3.9332040e-06,
            3.9244870e-06, 3.9157990e-06, 3.9071410e-06, 3.8985120e-06,
            3.8899120e-06, 3.8813430e-06, 3.8728010e-06, 3.8642880e-06,
            3.8558040e-06, 3.8473490e-06, 3.8389210e-06, 3.8305240e-06,
            3.8221530e-06, 3.8138100e-06, 3.8054940e-06, 3.7972080e-06,
            3.7889480e-06, 3.7807150e-06, 3.7725090e-06, 3.7643310e-06,
            3.7561810e-06, 3.7480560e-06, 3.7399580e-06, 3.7318870e-06,
            3.7238420e-06, 3.7158230e-06, 3.7078310e-06, 3.6998650e-06,
            3.6919240e-06, 3.6840080e-06, 3.6761200e-06, 3.6682570e-06,
            3.6604190e-06, 3.6526040e-06, 3.6448160e-06, 3.6370540e-06,
            3.6293160e-06, 3.6216020e-06, 3.6139130e-06, 3.6062490e-06,
            3.5986080e-06, 3.5909930e-06, 3.5834020e-06, 3.5758340e-06,
            3.5682900e-06, 3.5607710e-06 };

    double density(double h) {
        double h2 = h * 2;
        int h0 = (int) (h2);
        double d0 = _density[h0];
        double d1 = _density[h0 + 1];
        double r = h2 - h0;
        double dens = d0 + r * (d1 - d0);
        return dens;
    }

    void operator()(const state_t &pv, state_t &yDot, const double) {

        double x = pv[0];  // position
        double y = pv[1];
        double z = pv[2];
        double r = sqrt(x * x + y * y + z * z);
        double rrr = r * r * r;
        yDot[0] = pv[3]; // velocity
        yDot[1] = pv[4];
        yDot[2] = pv[5];

        double vrx = pv[3] + EARTH_ROT * y;
        double vry = pv[4] - EARTH_ROT * x;
        double vrz = pv[5];

        double vr = sqrt(vrx * vrx + vry * vry + vrz * vrz);

        double reqrq = EARTH_RE / r;
        reqrq *= reqrq * 1.5 * EARTH_J2;
        double zqrq = 5.0 * z * z / (r * r);
        yDot[3] = -_mu * x / (rrr) * (1.0 + reqrq * (1.0 - zqrq));
        yDot[4] = -_mu * y / (rrr) * (1.0 + reqrq * (1.0 - zqrq));
        yDot[5] = -_mu * z / (rrr) * (1.0 + reqrq * (3.0 - zqrq));

        double h = r - EARTH_RE;
        if (h > 0 && h < 1000) {
            double dens = density(h);
            double drag = 0.5 * Cd * dens * s / _mass;

            yDot[3] -= drag * vrx * vr;
            yDot[4] -= drag * vry * vr;
            yDot[5] -= drag * vrz * vr;
        }
    }
};

/*
 * Class:     fcmaes_core_Jni
 * Method:    integratePVCtoc11
 * Signature: ([DDDDDDD)I
 */
JNIEXPORT jint JNICALL Java_fcmaes_core_Jni_integratePVCtoc11(JNIEnv *env,
        jclass cls, jdoubleArray tpvj, jdouble dt, jdouble step,
        jboolean dopri) {

    double *tpv = env->GetDoubleArrayElements(tpvj, JNI_FALSE);
    state_t y(6);
    for (int i = 0; i < 6; i++) // r, v
        y[i] = tpv[i];

    PVCtoc11 pvt;
    pvt._mu = tpv[6]; // mu
    pvt._mass = tpv[8]; // mass

    int steps = 0;
    double t = 0.0;
    if (dopri) {
        DOPRI45 integrator;
        while (t < dt) {
            steps++;
            if (t + step >= dt) {
                integrator(pvt, y, t, dt - t);
                break;
            } else
                integrator(pvt, y, t, step);
        }
    } else {
        RK4 integrator;
        while (t < dt) {
            steps++;
            if (t + step >= dt) {
                integrator(pvt, y, t, dt - t);
                break;
            } else
                integrator(pvt, y, t, step);
        }
    }
    for (int i = 0; i < 6; i++)
        tpv[i] = y[i];
    tpv[7] += dt;
    env->SetDoubleArrayRegion(tpvj, 0, 6, (jdouble*) tpv);
    env->ReleaseDoubleArrayElements(tpvj, tpv, 0);
    return steps;
}
;

